{"version":3,"sources":["reportWebVitals.js","app/components/common/typografy/title.jsx","app/components/common/typografy/subtitle.jsx","app/components/common/typografy/text.jsx","app/assets/img/diagrams/DeNormalized.jpg","app/assets/img/diagrams/Normalized.jpg","app/components/common/typografy/smallTitle.jsx","app/components/common/divider.jsx","app/page/main.jsx","app/page/codeExamples.js","app/assets/img/diagrams/One-To-Many.jpg","app/page/dataRelationship/oneToMany/oneToMany.jsx","app/page/dataRelationship/oneToMany/examples.js","app/page/dataRelationship/manyToMany/manyToMany.jsx","app/page/dataRelationship/manyToMany/examples.js","app/page/dataRelationship/oneToOne/oneToOne.jsx","app/page/dataRelationship/oneToOne/examples.js","app/routes.js","app/components/common/sideBar.jsx","app/theme.js","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Title","children","Typography","variant","style","fontWeight","margin","Subtitle","Text","SmallTitle","Divider","createData","name","norm","denorm","rows","color","Main","Accordion","AccordionSummary","expandIcon","id","AccordionDetails","Stack","direction","spacing","Chip","label","icon","text","language","theme","dracula","wrapLines","src","diagram1","width","borderRadius","diagram2","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","row","border","scope","OneToManyPage","diagram","ManyToManyPage","OneToOnePage","routes","path","AppsIcon","iconColor","layout","divider","title","SideBar","location","useLocation","AppBar","position","zIndex","drawer","Toolbar","noWrap","Drawer","flexShrink","boxSizing","Box","overflow","links","section","list","forEach","prop","key","arr","display","push","ListItem","button","selected","pathname","NavLink","to","ListItemIcon","ListItemText","primary","length","List","marginLeft","marginTop","renderLinks","responsiveFontSizes","createTheme","typography","fontFamily","palette","mode","App","ThemeProvider","CssBaseline","flexGrow","p","Container","maxWidth","rootElement","document","getElementById","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.0bc08f70.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@mui/material/Typography\";\n\nconst Title = ({ children }) => {\n    return (\n        <Typography variant=\"h3\" style={{ fontWeight: 800, margin: \"16px 0\" }}>\n            {children}\n        </Typography>\n    );\n};\nTitle.propTypes = {\n    children: PropTypes.node\n};\nexport default Title;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@mui/material/Typography\";\n\nconst Subtitle = ({ children }) => {\n    return (\n        <Typography\n            variant=\"h4\"\n            style={{ fontWeight: 700, margin: \"40px 0 10px\" }}\n        >\n            {children}\n        </Typography>\n    );\n};\nSubtitle.propTypes = {\n    children: PropTypes.node\n};\nexport default Subtitle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@mui/material/Typography\";\nconst Text = ({ children }) => {\n    return <Typography>{children}</Typography>;\n};\nText.propTypes = {\n    children: PropTypes.node\n};\nexport default Text;\n","export default __webpack_public_path__ + \"static/media/DeNormalized.d62d249a.jpg\";","export default __webpack_public_path__ + \"static/media/Normalized.7c39904c.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@mui/material/Typography\";\nconst SmallTitle = ({ children }) => {\n    return (\n        <Typography variant=\"h5\" style={{ margin: \"25px 0 10px\" }}>\n            {children}\n        </Typography>\n    );\n};\nSmallTitle.propTypes = {\n    children: PropTypes.node\n};\nexport default SmallTitle;\n","import React from \"react\";\nconst Divider = () => {\n    return <hr />;\n};\n\nexport default Divider;\n","import * as React from \"react\";\nimport Title from \"app/components/common/typografy/title\";\nimport Subtitle from \"app/components/common/typografy/subtitle\";\nimport Text from \"app/components/common/typografy/text\";\nimport { CodeBlock, dracula } from \"react-code-blocks\";\nimport { example1Part1, example1Part2 } from \"./codeExamples\";\nimport Chip from \"@mui/material/Chip\";\nimport Stack from \"@mui/material/Stack\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport diagram1 from \"app/assets/img/diagrams/DeNormalized.jpg\";\nimport diagram2 from \"app/assets/img/diagrams/Normalized.jpg\";\nimport SmallTitle from \"app/components/common/typografy/smallTitle\";\nimport Divider from \"app/components/common/divider\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nfunction createData(name, norm, denorm) {\n    return { name, norm, denorm };\n}\n\nconst rows = [\n    createData(\n        \"Объем данных\",\n        <KeyboardArrowDownIcon style={{ color: \"green\" }} />,\n        <KeyboardArrowUpIcon style={{ color: \"red\" }} />\n    ),\n    createData(\n        \"Скорость получения данных\",\n        <KeyboardArrowDownIcon style={{ color: \"red\" }} />,\n        <KeyboardArrowUpIcon style={{ color: \"green\" }} />\n    ),\n    createData(\n        \"Несогласованность данных\",\n        <KeyboardArrowDownIcon style={{ color: \"green\" }} />,\n        <KeyboardArrowUpIcon style={{ color: \"red\" }} />\n    ),\n    createData(\n        \"Простота запроса\",\n\n        <KeyboardArrowDownIcon style={{ color: \"red\" }} />,\n        <KeyboardArrowUpIcon style={{ color: \"green\" }} />\n    ),\n    createData(\n        \"Затраты на Update/Put\",\n        <KeyboardArrowDownIcon style={{ color: \"green\" }} />,\n        <KeyboardArrowUpIcon style={{ color: \"red\" }} />\n    ),\n    createData(\n        <>\n            Сложность кода для <br /> работы со схемой\n        </>,\n        <KeyboardArrowDownIcon style={{ color: \"green\" }} />,\n        <KeyboardArrowUpIcon style={{ color: \"red\" }} />\n    ),\n    createData(\n        \"Целостность данных\",\n        <KeyboardArrowDownIcon style={{ color: \"red\" }} />,\n        <KeyboardArrowUpIcon style={{ color: \"green\" }} />\n    )\n];\nconst Main = () => {\n    return (\n        <>\n            <Title>Структуры данных</Title>\n\n            <Accordion>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography>Избыточность данных</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography>\n                        Избыточность данных - это условие, создаваемое в базе\n                        данных или технологии хранения данных, при которой один\n                        и тот же фрагмент данных хранится в двух разных местах.\n                        <br />\n                        Это может означать два разных поля в одной базе данных\n                        или два разных места в нескольких программных средах или\n                        платформах. Всякий раз, когда данные повторяются, это\n                        представляет собой избыточность данных.\n                    </Typography>\n                </AccordionDetails>\n            </Accordion>\n            <Accordion>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel2a-content\"\n                    id=\"panel2a-header\"\n                >\n                    <Typography>Согласованность данных</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography>\n                        Согласованность данных означает, совпадают ли одни и те\n                        же данные, хранящиеся в разных местах.\n                    </Typography>\n                </AccordionDetails>\n            </Accordion>\n            <Divider />\n            <Subtitle>Денормализация</Subtitle>\n            <Text>\n                Денормализация - это метод, который используется при\n                проектировании в базе данных. Он используется для добавления\n                избыточности для быстрого выполнения запроса. Это метод, при\n                котором данные объединяются.\n            </Text>\n\n            <SmallTitle>Характеристики</SmallTitle>\n            <Stack\n                direction=\"row\"\n                spacing={1}\n                style={{ margin: \"10px 0 20px\" }}\n            >\n                <Chip\n                    label=\"Скорость обработки запроса\"\n                    variant=\"outlined\"\n                    icon={<KeyboardArrowUpIcon style={{ color: \"green\" }} />}\n                />\n                <Chip\n                    label=\"Количество сущностей\"\n                    variant=\"outlined\"\n                    icon={<KeyboardArrowDownIcon style={{ color: \"green\" }} />}\n                />\n                <Chip\n                    label=\"Избыточность данных\"\n                    variant=\"outlined\"\n                    icon={<KeyboardArrowUpIcon style={{ color: \"red\" }} />}\n                />\n                <Chip\n                    label=\"Согласованность данных\"\n                    variant=\"outlined\"\n                    icon={<KeyboardArrowDownIcon style={{ color: \"red\" }} />}\n                />\n            </Stack>\n            <SmallTitle>Пример</SmallTitle>\n            <CodeBlock\n                text={example1Part1}\n                language=\"js\"\n                theme={dracula}\n                wrapLines={true}\n            />\n            <SmallTitle>Логика процесса запроса данных</SmallTitle>\n            <img\n                src={diagram1}\n                style={{\n                    width: \"100%\",\n                    borderRadius: \"10px\"\n                }}\n            />\n            <Divider />\n            <Subtitle>Нормализация</Subtitle>\n            <Text>\n                Нормализация - это метод, используемый в базе данных для\n                уменьшения избыточности и несогласованности данных. Это метод,\n                при котором данные без избыточности и непротиворечивости\n                хранятся в установленной схеме.\n            </Text>\n            <SmallTitle>Характеристики</SmallTitle>\n            <Stack\n                direction=\"row\"\n                spacing={1}\n                style={{ margin: \"10px 0 20px\" }}\n            >\n                <Chip\n                    label=\"Скорость обработки запроса\"\n                    variant=\"outlined\"\n                    icon={<KeyboardArrowDownIcon style={{ color: \"red\" }} />}\n                />\n                <Chip\n                    label=\"Количество сущностей\"\n                    variant=\"outlined\"\n                    icon={<KeyboardArrowUpIcon style={{ color: \"red\" }} />}\n                />\n                <Chip\n                    label=\"Избыточность данных\"\n                    variant=\"outlined\"\n                    icon={<KeyboardArrowDownIcon style={{ color: \"green\" }} />}\n                />\n                <Chip\n                    label=\"Согласованность данных\"\n                    variant=\"outlined\"\n                    icon={<KeyboardArrowUpIcon style={{ color: \"green\" }} />}\n                />\n            </Stack>\n            <SmallTitle>Пример</SmallTitle>\n            <CodeBlock\n                text={example1Part2}\n                language=\"js\"\n                theme={dracula}\n                wrapLines={true}\n            />\n            <SmallTitle>Логика процесса запроса данных</SmallTitle>\n            <img\n                src={diagram2}\n                style={{\n                    width: \"100%\",\n                    borderRadius: \"10px\"\n                }}\n            />\n            <Divider />\n            <Subtitle>Сравнение</Subtitle>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Параметр</TableCell>\n                            <TableCell align=\"center\">Normalization</TableCell>\n                            <TableCell align=\"center\">\n                                Denormalization\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row) => (\n                            <TableRow\n                                key={row.name}\n                                sx={{\n                                    \"&:last-child td, &:last-child th\": {\n                                        border: 0\n                                    }\n                                }}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align=\"center\">{row.norm}</TableCell>\n                                <TableCell align=\"center\">\n                                    {row.denorm}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    );\n};\n\nexport default Main;\n","export const example1Part1 = `// user Entity\n{\n    _id: \"joe\",\n    name: \"Joe Bookreader\",\n    address: {\n        street: \"123 Fake Street\",\n        city: \"Faketon\",\n        state: \"MA\",\n        zip: \"12345\"\n    }\n}\n`;\nexport const example1Part2 = `// User Entity\n{\n    _id: \"joe\",\n    name: \"Joe Bookreader\"\n}\n// User Address Entity\n{\n    user_id: \"joe\", // reference to parent document\n    street: \"123 Fake Street\",\n    city: \"Faketon\",\n    state: \"MA\",\n    zip: \"12345\"\n}`;\n","export default __webpack_public_path__ + \"static/media/One-To-Many.6fb2d852.jpg\";","import Title from \"app/components/common/typografy/title\";\nimport Subtitle from \"app/components/common/typografy/subtitle\";\nimport SmallTitle from \"app/components/common/typografy/smallTitle\";\nimport Text from \"app/components/common/typografy/text\";\nimport { CodeBlock, dracula } from \"react-code-blocks\";\nimport diagram from \"app/assets/img/diagrams/One-To-Many.jpg\";\nimport {\n    adressesExampleDenormalized,\n    adressesExampleNormalized,\n    publisherExampleDenormalized,\n    publisherExampleNormalizedByPublisher,\n    publisherExampleNormalizedByBook\n} from \"./examples\";\nimport React from \"react\";\nconst OneToManyPage = () => {\n    return (\n        <>\n            <Title>One-to-Many</Title>\n            <Text>Один ко многим</Text>\n            <SmallTitle>Зачем</SmallTitle>\n            <Text>- Увеличение производительности</Text>\n            <Text>- Согласованность данных</Text>\n\n            <Subtitle>Пример 1. Адреса</Subtitle>\n            <SmallTitle>1. Денормализованные данные</SmallTitle>\n            <CodeBlock\n                text={adressesExampleDenormalized}\n                language=\"js\"\n                theme={dracula}\n                wrapLines={true}\n            />\n            <SmallTitle>2. Нормализованные данные</SmallTitle>\n            <CodeBlock\n                text={adressesExampleNormalized}\n                language=\"js\"\n                theme={dracula}\n                wrapLines={true}\n            />\n            <Subtitle>Пример 2. Издатель</Subtitle>\n            <SmallTitle>1. Денормализованные данные</SmallTitle>\n            <CodeBlock\n                text={publisherExampleDenormalized}\n                language=\"js\"\n                theme={dracula}\n                wrapLines={true}\n            />\n            <SmallTitle>2. Нормализованные данные по Издателю</SmallTitle>\n            <CodeBlock\n                text={publisherExampleNormalizedByPublisher}\n                language=\"js\"\n                theme={dracula}\n                wrapLines={true}\n            />\n            <SmallTitle>3. Нормализованные данные по Книге</SmallTitle>\n            <CodeBlock\n                text={publisherExampleNormalizedByBook}\n                language=\"js\"\n                theme={dracula}\n                wrapLines={true}\n            />\n            <SmallTitle>Плюсы данной структуры</SmallTitle>\n            <Text>\n                - Получение дочерних элементов без дополнительного запроса к БД\n            </Text>\n            <br />\n            <img\n                src={diagram}\n                style={{\n                    width: \"100%\",\n                    borderRadius: \"10px\"\n                }}\n            />\n        </>\n    );\n};\n\nexport default OneToManyPage;\n","export const adressesExampleNormalized = `// User Entity\n{\n    _id: \"joe\",\n    name: \"Joe Bookreader\"\n}\n// Address Entities\n[\n    {\n        parent_id: \"joe\", // reference to parent document\n        street: \"123 Fake Street\",\n        city: \"Faketon\",\n        state: \"MA\",\n        zip: \"12345\"\n    },\n    {\n        parent_id: \"joe\",\n        street: \"1 Some Other Street\",\n        city: \"Boston\",\n        state: \"MA\",\n        zip: \"12345\"\n    }\n]`;\nexport const adressesExampleDenormalized = `// User \n{\n    _id: \"joe\",\n    name: \"Joe Bookreader\",\n    addresses: [\n        {\n            street: \"123 Fake Street\",\n            city: \"Faketon\",\n            state: \"MA\",\n            zip: \"12345\"\n        },\n        {\n            street: \"1 Some Other Street\",\n            city: \"Boston\",\n            state: \"MA\",\n            zip: \"12345\"\n        }\n    ]\n}`;\n\nexport const publisherExampleDenormalized = `//Book Entities\n[\n    {\n        title: \"MongoDB: The Definitive Guide\",\n        author: [ \"Kristina Chodorow\", \"Mike Dirolf\" ],\n        published_date: ISODate(\"2010-09-24\"),\n        pages: 216,\n        language: \"English\",\n        publisher: {\n            name: \"O'Reilly Media\",\n            founded: 1980,\n            location: \"CA\"\n        }\n    },\n    {\n        title: \"50 Tips and Tricks for MongoDB Developer\",\n        author: \"Kristina Chodorow\",\n        published_date: ISODate(\"2011-05-06\"),\n        pages: 68,\n        language: \"English\",\n        publisher: {\n            name: \"O'Reilly Media\",\n            founded: 1980,\n            location: \"CA\"\n        }\n    }\n]`;\nexport const publisherExampleNormalizedByPublisher = `// Publisher Entity\n{\n    name: \"O'Reilly Media\",\n    founded: 1980,\n    location: \"CA\",\n    books: [123456789, 234567890, ...]\n}\n\n// Book Entities\n[\n    {\n        _id: 123456789,\n        title: \"MongoDB: The Definitive Guide\",\n        author: [ \"Kristina Chodorow\", \"Mike Dirolf\" ],\n        published_date: ISODate(\"2010-09-24\"),\n        pages: 216,\n        language: \"English\"\n    },\n    {\n        _id: 234567890,\n        title: \"50 Tips and Tricks for MongoDB Developer\",\n        author: \"Kristina Chodorow\",\n        published_date: ISODate(\"2011-05-06\"),\n        pages: 68,\n        language: \"English\"\n    }\n]`;\n\nexport const publisherExampleNormalizedByBook = `// Publisher Entity\n{\n    _id: \"oreilly\",\n    name: \"O'Reilly Media\",\n    founded: 1980,\n    location: \"CA\"\n}\n\n// Book Entities\n[\n    {\n        _id: 123456789,\n        title: \"MongoDB: The Definitive Guide\",\n        author: [ \"Kristina Chodorow\", \"Mike Dirolf\" ],\n        published_date: ISODate(\"2010-09-24\"),\n        pages: 216,\n        language: \"English\",\n        publisher_id: \"oreilly\"\n    },\n    {\n        _id: 234567890,\n        title: \"50 Tips and Tricks for MongoDB Developer\",\n        author: \"Kristina Chodorow\",\n        published_date: ISODate(\"2011-05-06\"),\n        pages: 68,\n        language: \"English\",\n        publisher_id: \"oreilly\"\n    }\n]`;\n","import React from \"react\";\nimport Title from \"app/components/common/typografy/title\";\nimport SmallTitle from \"app/components/common/typografy/smallTitle\";\nimport Subtitle from \"app/components/common/typografy/subtitle\";\nimport Text from \"app/components/common/typografy/text\";\nimport { CodeBlock, dracula } from \"react-code-blocks\";\nimport { overloadExampleAfter, overloadExampleBefore } from \"./examples\";\nconst ManyToManyPage = () => {\n    return (\n        <>\n            <Title>Many-to-Many</Title>\n            <Text>Многие ко многим или Two-way-references</Text>\n            <SmallTitle>Зачем</SmallTitle>\n            <Text>- Увеличение производительности</Text>\n            <Text>- Жизненно необходимые данные</Text>\n\n            <Subtitle>Пример 1. Книги и теги</Subtitle>\n            <SmallTitle>Логика</SmallTitle>\n            <Text>\n                - В каждом теге храним ссылки на все книги, содержащие тег.\n            </Text>\n            <Text>- В каждой книге храним ссылки на все её теги.</Text>\n            <br />\n            <CodeBlock\n                text={overloadExampleBefore}\n                language=\"js\"\n                theme={dracula}\n                wrapLines={true}\n            />\n            <Subtitle>Пример 2. Книги и теги. Overload</Subtitle>\n            <Text>\n                Overload - перегрузка, сверхнагрузка. В данном случае имеется\n                ввиду хранение большого количества даннных в параметре\n                определенного экземпляра сущности.\n            </Text>\n\n            <SmallTitle>Условие</SmallTitle>\n            <Text>- Для каждого тега сучествует &gt;1000 пособий</Text>\n            <br />\n            <CodeBlock\n                text={overloadExampleAfter}\n                language=\"js\"\n                theme={dracula}\n                wrapLines={true}\n            />\n        </>\n    );\n};\n\nexport default ManyToManyPage;\n","export const overloadExampleBefore = `// Tag Entities\n[\n    {\n        _id:\"tag1\",\n        name: \"tag1\",\n        books:[123456789]\n    },\n    {\n        _id:\"tag2\",\n        name: \"tag2\",\n        books:[123456789,34567890]\n    },\n    {\n        _id:\"tag3\",\n        name: \"tag3\",\n        books:[34567890]\n    }\n]\n\n// Book Entities\n[\n    {\n        _id: 123456789,\n        title: \"MongoDB: The Definitive Guide\",\n        author: [ \"Kristina Chodorow\", \"Mike Dirolf\" ],\n        published_date: ISODate(\"2010-09-24\"),\n        pages: 216,\n        language: \"English\",\n        tags:[\"tag1\",\"tag2\"],\n        publisher_id: \"oreilly\"\n    },\n    {\n        _id: 234567890,\n        title: \"50 Tips and Tricks for MongoDB Developer\",\n        author: \"Kristina Chodorow\",\n        published_date: ISODate(\"2011-05-06\"),\n        pages: 68,\n        language: \"English\",\n        tags:[\"tag2\",\"tag3\"],\n        publisher_id: \"oreilly\"\n    }\n]`;\n\nexport const overloadExampleAfter = `// Tag Entities\n[\n    {\n        _id:\"tag1\",\n        name: \"tag1\",\n    },\n    {\n        _id:\"tag2\",\n        name: \"tag2\",\n    },\n    {\n        _id:\"tag3\",\n        name: \"tag3\",\n    }\n]\n\n// Book Entities\n[\n    {\n        _id: 123456789,\n        title: \"MongoDB: The Definitive Guide\",\n        author: [ \"Kristina Chodorow\", \"Mike Dirolf\" ],\n        published_date: ISODate(\"2010-09-24\"),\n        pages: 216,\n        language: \"English\",\n        publisher_id: \"oreilly\"\n    },\n    {\n        _id: 234567890,\n        title: \"50 Tips and Tricks for MongoDB Developer\",\n        author: \"Kristina Chodorow\",\n        published_date: ISODate(\"2011-05-06\"),\n        pages: 68,\n        language: \"English\",\n        publisher_id: \"oreilly\"\n    }\n]\n\n// Storeitems Entities\n[\n    {\n        _id:\"12351uhbrjnweqke\"\n        tagId:\"tag1\",\n        bookId:\"123456789\"\n    },\n    {\n        _id:\"adfa1uhbrjnweqke\"\n        tagId:\"tag2\",\n        bookId:\"123456789\"\n    },\n    {\n        _id:\"12we1uhbrjnweqke\"\n        tagId:\"tag2\",\n        bookId:\"123456790\"\n    },\n    {\n        _id:\"asfd1uhbrjnweqke\"\n        tagId:\"tag3\",\n        bookId:\"123456790\"\n    }\n]`;\n","import React from \"react\";\nimport Subtitle from \"app/components/common/typografy/subtitle\";\nimport { CodeBlock, dracula } from \"react-code-blocks\";\nimport {\n    oneToOneExample1Part1,\n    oneToOneExample1Part2,\n    oneToOneExample2Part1,\n    oneToOneExample2Part2\n} from \"./examples\";\nimport Title from \"app/components/common/typografy/title\";\nimport SmallTitle from \"app/components/common/typografy/smallTitle\";\nimport Text from \"app/components/common/typografy/text\";\n\nconst OneToOnePage = () => {\n    return (\n        <>\n            <Title>One-to-One</Title>\n            <Text>Один к одному</Text>\n            <SmallTitle>Зачем</SmallTitle>\n            <Text>\n                - Разделение ондной сущности на болеее используемые и менее\n                используемые данные\n            </Text>\n            <Text>- Оптимизация чтения и обработки данных</Text>\n            <Text>\n                - Оптимизация объема памяти, необходимого для работы приложения\n            </Text>\n\n            <Subtitle>Пример 1. Адрес пользователя</Subtitle>\n            <SmallTitle>1. Денормализованные данные</SmallTitle>\n            <CodeBlock\n                text={oneToOneExample1Part1}\n                language=\"js\"\n                theme={dracula}\n                wrapLines={true}\n            />\n\n            <SmallTitle>2. Нормализованные данные</SmallTitle>\n            <CodeBlock\n                text={oneToOneExample1Part2}\n                language=\"js\"\n                theme={dracula}\n                wrapLines={true}\n            />\n\n            <Subtitle>Пример 2. Данные о фильме</Subtitle>\n            <SmallTitle>1. Денормализованные данные</SmallTitle>\n            <CodeBlock\n                text={oneToOneExample2Part1}\n                language=\"js\"\n                theme={dracula}\n                wrapLines={true}\n            />\n            <SmallTitle>2. Нормализованные данные</SmallTitle>\n            <CodeBlock\n                text={oneToOneExample2Part2}\n                language=\"js\"\n                theme={dracula}\n                wrapLines={true}\n            />\n        </>\n    );\n};\n\nexport default OneToOnePage;\n","export const oneToOneExample1Part1 = `{\n    _id: \"joe\",\n    name: \"Joe Bookreader\",\n    address: {\n        street: \"123 Fake Street\",\n        city: \"Faketon\",\n        state: \"MA\",\n        zip: \"12345\"\n    }\n}\n`;\nexport const oneToOneExample1Part2 = `// User \n{\n    _id: \"joe\",\n    name: \"Joe Bookreader\"\n}\n// User Address\n{\n    user_id: \"joe\", // reference to patron document\n    street: \"123 Fake Street\",\n    city: \"Faketon\",\n    state: \"MA\",\n    zip: \"12345\"\n}`;\n\nexport const oneToOneExample2Part1 = `{\n    _id: 1,\n    title: \"The Arrival of a Train\",\n    year: 1896,\n    runtime: 1,\n    released: ISODate(\"01-25-1896\"),\n    poster: \"http://ia.media-imdb.com/images/M/MV5BMjEyNDk5MDYzOV5BMl5BanBnXkFtZTgwNjIxMTEwMzE@._V1_SX300.jpg\",\n    plot: \"A group of people are standing in a straight line along the platform of a railway station, waiting for a train, which is seen coming at some distance. When the train stops at the platform, ...\",\n    fullplot: \"A group of people are standing in a straight line along the platform of a railway station, waiting for a train, which is seen coming at some distance. When the train stops at the platform, the line dissolves. The doors of the railway-cars open, and people on the platform help passengers to get off.\",\n    lastupdated: ISODate(\"2015-08-15T10:06:53\"),\n    type: \"movie\",\n    directors: [ \"Auguste Lumière\", \"Louis Lumière\" ],\n    imdb: {\n        rating: 7.3,\n        votes: 5043,\n        id: 12\n    },\n    countries: [ \"France\" ],\n    genres: [ \"Documentary\", \"Short\" ],\n    tomatoes: {\n        viewer: {\n            rating: 3.7,\n            numReviews: 59\n        },\n        lastUpdated: ISODate(\"2020-01-09T00:02:53\")\n    }\n}`;\n\nexport const oneToOneExample2Part2 = `// movie collection\n[\n    {\n        _id: 1,\n        title: \"The Arrival of a Train\",\n        year: 1896,\n        runtime: 1,\n        released: ISODate(\"1896-01-25\"),\n        type: \"movie\",\n        directors: [ \"Auguste Lumière\", \"Louis Lumière\" ],\n        countries: [ \"France\" ],\n        genres: [ \"Documentary\", \"Short\" ],\n    }\n]\n\n// movie_details collection\n[\n    {\n        _id: 156,\n        movie_id: 1, // reference to the movie collection\n        poster: \"http://ia.media-imdb.com/images/M/MV5BMjEyNDk5MDYzOV5BMl5BanBnXkFtZTgwNjIxMTEwMzE@._V1_SX300.jpg\",\n        plot: \"A group of people are standing in a straight line along the platform of a railway station, waiting for a train, which is seen coming at some distance. When the train stops at the platform, ...\",\n        fullplot: \"A group of people are standing in a straight line along the platform of a railway station, waiting for a train, which is seen coming at some distance. When the train stops at the platform, the line dissolves. The doors of the railway-cars open, and people on the platform help passengers to get off.\",\n        lastupdated: ISODate(\"2015-08-15T10:06:53\"),\n        imdb: {\n            rating: 7.3,\n            votes: 5043,\n            id: 12\n        },\n        tomatoes: {\n            viewer: {\n                rating: 3.7,\n                numReviews: 59\n            },\n            lastUpdated: ISODate(\"2020-01-29T00:02:53\")\n        }\n    }\n]`;\n","// core components\nimport Main from \"./page/main\";\nimport AppsIcon from \"@mui/icons-material/Apps\";\nimport OneToManyPage from \"./page/dataRelationship/oneToMany/oneToMany\";\nimport ManyToManyPage from \"./page/dataRelationship/manyToMany/manyToMany\";\nimport OneToOnePage from \"./page/dataRelationship/oneToOne/oneToOne\";\n\nconst routes = [\n    {\n        path: \"/index\",\n        name: \"Main\",\n        icon: AppsIcon,\n        iconColor: \"Primary\",\n        layout: \"/\",\n        component: Main\n    },\n    {\n        divider: true\n    },\n    {\n        title: \"Data Relationship\"\n    },\n    {\n        path: \"/onetoone\",\n        name: \"One-to-One\",\n        icon: AppsIcon,\n        iconColor: \"Primary\",\n        layout: \"/relationship\",\n        component: OneToOnePage\n    },\n    {\n        path: \"/onetomany\",\n        name: \"One-to-Many\",\n        icon: AppsIcon,\n        iconColor: \"Primary\",\n        layout: \"/relationship\",\n        component: OneToManyPage\n    },\n    {\n        path: \"/manytomany\",\n        name: \"Many-to-Many\",\n        icon: AppsIcon,\n        iconColor: \"Primary\",\n        layout: \"/relationship\",\n        component: ManyToManyPage\n    }\n];\nexport default routes;\n","import * as React from \"react\";\nimport Drawer from \"@mui/material/Drawer\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Box from \"@mui/material/Box\";\nimport PropTypes from \"prop-types\";\nimport { NavLink, useLocation } from \"react-router-dom\";\n\nconst drawerWidth = 240;\nconst SideBar = ({ routes, title }) => {\n    const location = useLocation();\n\n    const renderLinks = (routes) => {\n        const links = [];\n        let section = [];\n        let list = [];\n        routes.forEach((prop, key, arr) => {\n            if (prop.path && prop.display !== false) {\n                list.push(\n                    <ListItem\n                        button\n                        key={key}\n                        selected={location.pathname === prop.path}\n                        component={NavLink}\n                        to={prop.path}\n                    >\n                        <ListItemIcon>\n                            <prop.icon />\n                        </ListItemIcon>\n                        <ListItemText primary={prop.name} />\n                    </ListItem>\n                );\n            }\n            if (prop.divider || key + 1 === arr.length) {\n                section.push(<List key={key}>{list}</List>);\n                if (prop.divider) section.push(<Divider key={key + 1} />);\n                links.push(section);\n                section = [];\n                list = [];\n            }\n            if (prop.title) {\n                section.push(\n                    <Typography\n                        key={key}\n                        variant=\"h6\"\n                        component=\"h6\"\n                        style={{\n                            marginLeft: 20,\n                            marginTop: 20\n                        }}\n                    >\n                        {prop.title}\n                    </Typography>\n                );\n            }\n        });\n        return links;\n    };\n\n    return (\n        <>\n            <AppBar\n                position=\"fixed\"\n                sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\n            >\n                <Toolbar>\n                    <Typography variant=\"h6\" noWrap component=\"div\">\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                sx={{\n                    width: drawerWidth,\n                    flexShrink: 0,\n                    [`& .MuiDrawer-paper`]: {\n                        width: drawerWidth,\n                        boxSizing: \"border-box\"\n                    }\n                }}\n            >\n                <Toolbar />\n                <Box sx={{ overflow: \"auto\" }}>{renderLinks(routes)}</Box>\n            </Drawer>\n        </>\n    );\n};\nSideBar.propTypes = {\n    routes: PropTypes.array,\n    title: PropTypes.string\n};\n\nexport default SideBar;\n","import { createTheme, responsiveFontSizes } from \"@mui/material/styles\";\n\nconst theme = responsiveFontSizes(\n    createTheme({\n        typography: {\n            fontFamily: `\"IBM Plex Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n    Roboto, \"Helvetica Neue\", Arial, sans-serif, \"Apple Color Emoji\",\n    \"Segoe UI Emoji\", \"Segoe UI Symbol\"`\n        },\n        palette: {\n            mode: \"dark\"\n        }\n    })\n);\nexport default theme;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport Box from \"@mui/material/Box\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport SideBar from \"./components/common/sideBar\";\nimport Container from \"@mui/material/Container\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"./theme\";\nconst getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n        if (prop.path) {\n            return (\n                <Route path={prop.path} component={prop.component} key={key} />\n            );\n        }\n        return null;\n    });\n};\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <Box sx={{ display: \"flex\" }}>\n                <CssBaseline />\n                <SideBar routes={routes} title={\"Data Structures\"} />\n                <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n                    <Toolbar />\n                    <Container\n                        maxWidth=\"md\"\n                        style={{ margin: \"auto auto 60px\" }}\n                    >\n                        <Switch>\n                            {getRoutes(routes)}\n                            <Redirect to=\"/index\" />\n                        </Switch>\n                    </Container>\n                </Box>\n            </Box>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./app/App\";\nimport \"index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = ReactDOM.createRoot(rootElement);\n\nroot.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}